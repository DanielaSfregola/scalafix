#!/usr/bin/env bash
set -eu
PUBLISH=${CI_PUBLISH:-false}

set-up-ssh() {
  echo "Setting up ssh..."
  openssl aes-256-cbc -K $encrypted_468467362b53_key -iv $encrypted_468467362b53_iv -in .travis/github_deploy_key.enc -out .travis/github_deploy_key -d
  declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Decrypt the file containing the private key
  # (Note: this is the same as what is generated by the Travis CLI at step 2.5)

  openssl aes-256-cbc \
    -K "$encrypted_468467362b53_key" \
    -iv "$encrypted_468467362b53_iv" \
    -in ".travis/github_deploy_key.enc" \
    -out "$SSH_FILE" -d

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # Enable SSH authentication

  chmod 600 "$SSH_FILE" \
    && printf "%s\n" \
         "Host github.com" \
         "  IdentityFile $SSH_FILE" \
         "  LogLevel ERROR" >> ~/.ssh/config
}

if [[ "$TRAVIS_BRANCH" == "master" && "$PUBLISH" == "true" ]]; then
  git log | head -n 20
  echo "Running publish from $(pwd)"
  set-up-ssh
  mkdir -p $HOME/.bintray
  cat > $HOME/.bintray/.credentials <<EOF
realm = Bintray API Realm
host = api.bintray.com
user = ${BINTRAY_USERNAME}
password = ${BINTRAY_API_KEY}
EOF
  sbt ci-publish
else
  echo "Skipping publish, branch=$TRAVIS_BRANCH publish=$PUBLISH test=$CI_TEST"
fi


